#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: apisixroutes.apisix.apache.org
spec:
  additionalPrinterColumns:
    - JSONPath: .spec.http[].match.hosts
      name: Hosts
      type: string
    - JSONPath: .spec.http[].match.paths
      name: URIs
      type: string
    - JSONPath: .spec.http[].match.backends[].serviceName
      name: Target Service
      type: string
    - JSONPath: .spec.tcp[].match.ingressPort
      name: Ingress Server Port
      type: integer
    - JSONPath: .spec.tcp[].match.backend.serviceName
      name: Target Service
      type: string
    - JSONPath: .metadata.creationTimestamp
      name: Age
      type: date
  group: apisix.apache.org
  versions:
    - name: v1
      served: true
      storage: false
      deprecated: true
    - name: v2alpha1
      served: true
      storage: false
    - name: v2beta1
      served: true
      storage: true
  scope: Namespaced
  names:
    plural: apisixroutes
    singular: apisixroute
    kind: ApisixRoute
    shortNames:
      - ar
  preserveUnknownFields: true # we have to enable it since plugin config
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      properties:
        spec:
          type: object
          anyOf:
            - required: ["http"]
            - required: ["tcp"]
            - required: ["stream"]
          properties:
            http:
              type: array
              minItems: 1
              items:
                type: object
                oneOf:
                  - required: ["name", "match", "backend"]
                  - required: ["name", "match", "backends"]
                properties:
                  name:
                    type: string
                    minLength: 1
                  priority:
                    type: integer
                  match:
                    type: object
                    required:
                    - paths
                    properties:
                      paths:
                        type: array
                        minItems: 1
                        items:
                          type: string
                          pattern: "^/[a-zA-Z0-9\\-._~%!$&'()+,;=:@/]*\\*?$"
                      hosts:
                        type: array
                        minItems: 1
                        items:
                          type: string
                          pattern: "^\\*?[0-9a-zA-Z-._]+$"
                      methods:
                        type: array
                        minItems: 1
                        items:
                          type: string
                          enum: ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"]
                      remoteAddrs:
                        type: array
                        minItems: 1
                        items:
                          type: string
                      exprs:
                        type: array
                        minItems: 1
                        items:
                          type: object
                          properties:
                            subject:
                              type: object
                              properties:
                                scope:
                                  type: string
                                  enum: ["Cookie", "Header", "Path", "Query"]
                                name:
                                  type: string
                                  minLength: 1
                              required:
                              - scope
                            op:
                              type: string
                              enum:
                                - Equal
                                - NotEqual
                                - GreaterThan
                                - LessThan
                                - In
                                - NotIn
                                - RegexMatch
                                - RegexNotMatch
                                - RegexMatchCaseInsensitive
                                - RegexNotMatchCaseInsensitive
                            value:
                              type: string
                            set:
                              type: array
                              items:
                                type: string
                          oneOf:
                            - required: ["subject", "op", "value"]
                            - required: ["subject", "op", "set"]
                  websocket:
                    type: boolean
                  backend:
                    type: object
                    properties:
                      serviceName:
                        type: string
                        minLength: 1
                      servicePort:
                        type: integer
                        minimum: 1
                        maximum: 65535
                      resolveGranualrity:
                        type: string
                        enum: ["endpoint", "service"]
                      weight:
                        type: integer
                        minimum: 0
                      subset:
                        type: string
                    required:
                      - serviceName
                      - servicePort
                  backends:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        serviceName:
                          type: string
                          minLength: 1
                        servicePort:
                          type: integer
                          minimum: 1
                          maximum: 65535
                        resolveGranualrity:
                          type: string
                          enum: ["endpoint", "service"]
                        weight:
                          type: integer
                          minimum: 0
                        subset:
                          type: string
                    required:
                      - serviceName
                      - servicePort
                  plugins:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                        enable:
                          type: boolean
                        config:
                          type: object
                    required:
                      - name
                      - enable
                  authentication:
                    type: object
                    properties:
                      enable:
                        type: boolean
                      type:
                        type: string
                        enum: ["basicAuth", "keyAuth"]
                      keyAuth:
                        type: object
                        properties:
                          header:
                            type: string
                    required:
                      - enable
            tcp:
              type: array
              minItems: 1
              items:
                type: object
                required: ["name", "match", "backend"]
                properties:
                  name:
                    type: string
                    minLength: 1
                  match:
                    type: object
                    properties:
                      ingressPort:
                        type: integer
                        minimum: 1
                        maximum: 65535
                    required:
                      - ingressPort
                  backend:
                    type: object
                    properties:
                      serviceName:
                        type: string
                        minLength: 1
                      servicePort:
                        type: integer
                        minimum: 1
                        maximum: 65535
                      resolveGranualrity:
                        type: string
                        enum: ["endpoint", "service"]
                      subset:
                        type: string
                    required:
                      - serviceName
                      - servicePort
            stream:
              type: array
              minItems: 1
              items:
                type: object
                required: [ "name", "match", "backend", "protocol" ]
                properties:
                  "protocol":
                    type: string
                    enum: [ "TCP", "UDP" ]
                  name:
                    type: string
                    minLength: 1
                  match:
                    type: object
                    properties:
                      ingressPort:
                        type: integer
                        minimum: 1
                        maximum: 65535
                    required:
                      - ingressPort
                  backend:
                    type: object
                    properties:
                      serviceName:
                        type: string
                        minLength: 1
                      servicePort:
                        type: integer
                        minimum: 1
                        maximum: 65535
                      resolveGranualrity:
                        type: string
                        enum: [ "endpoint", "service" ]
                      subset:
                        type: string
                    required:
                      - serviceName
                      - servicePort

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: apisixtlses.apisix.apache.org
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.hosts
    name: SNIs
    type: string
  - JSONPath: .spec.secret.name
    name: Secret Name
    type: string
  - JSONPath: .spec.secret.namespace
    name: Secret Namespace
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: apisix.apache.org
  versions:
  - name: v1
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: apisixtlses
    singular: apisixtls
    kind: ApisixTls
    shortNames:
    - atls
  preserveUnknownFields: false
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ApisixTls defines SSL resource in APISIX.
      type: object
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ApisixTlsSpec is the specification of ApisixSSL.
          type: object
          required:
          - hosts
          - secret
          properties:
            client:
              description: ApisixMutualTlsClientConfig describes the mutual TLS CA
                and verify depth
              type: object
              properties:
                caSecret:
                  description: ApisixSecret describes the Kubernetes Secret name and
                    namespace.
                  type: object
                  required:
                  - name
                  - namespace
                  properties:
                    name:
                      type: string
                      minLength: 1
                    namespace:
                      type: string
                      minLength: 1
                depth:
                  type: integer
            hosts:
              type: array
              minItems: 1
              items:
                type: string
                pattern: ^\*?[0-9a-zA-Z-.]+$
            secret:
              description: ApisixSecret describes the Kubernetes Secret name and namespace.
              type: object
              required:
              - name
              - namespace
              properties:
                name:
                  type: string
                  minLength: 1
                namespace:
                  type: string
                  minLength: 1
        status:
          description: ApisixStatus is the status report for Apisix ingress Resources
          type: object
          properties:
            conditions:
              type: array
              items:
                description: "Condition contains details for one aspect of the current
                  state of this API Resource. --- This struct is intended for direct
                  use as an array at the field path .status.conditions.  For example,
                  type FooStatus struct{     // Represents the observations of a foo's
                  current state.     // Known .status.conditions.type are: \"Available\",
                  \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     //
                  +patchStrategy=merge     // +listType=map     // +listMapKey=type
                  \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                  patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                  \n     // other fields }"
                type: object
                required:
                - lastTransitionTime
                - message
                - reason
                - status
                - type
                properties:
                  lastTransitionTime:
                    description: lastTransitionTime is the last time the condition
                      transitioned from one status to another. This should be when
                      the underlying condition changed.  If that is not known, then
                      using the time when the API field changed is acceptable.
                    type: string
                    format: date-time
                  message:
                    description: message is a human readable message indicating details
                      about the transition. This may be an empty string.
                    type: string
                    maxLength: 32768
                  observedGeneration:
                    description: observedGeneration represents the .metadata.generation
                      that the condition was set based upon. For instance, if .metadata.generation
                      is currently 12, but the .status.conditions[x].observedGeneration
                      is 9, the condition is out of date with respect to the current
                      state of the instance.
                    type: integer
                    format: int64
                    minimum: 0
                  reason:
                    description: reason contains a programmatic identifier indicating
                      the reason for the condition's last transition. Producers of
                      specific condition types may define expected values and meanings
                      for this field, and whether the values are considered a guaranteed
                      API. The value should be a CamelCase string. This field may
                      not be empty.
                    type: string
                    maxLength: 1024
                    minLength: 1
                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    type: string
                    enum:
                    - "True"
                    - "False"
                    - Unknown
                  type:
                    description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      --- Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                    type: string
                    maxLength: 316
                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: apisixupstreams.apisix.apache.org
spec:
  group: apisix.apache.org
  versions:
    - name: v1
      served: true
      storage: true
  scope: Namespaced
  names:
    plural: apisixupstreams
    singular: apisixupstream
    kind: ApisixUpstream
    shortNames:
      - au
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      properties:
        spec:
          type: object
          properties:
            subsets:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    minLength: 1
                  labels:
                    type: object
                required: ["name", "labels"]
            loadbalancer:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - roundrobin
                    - chash
                    - ewma
                    - least_conn
                hashOn:
                  type: string
                  enum:
                    - vars
                    - vars_combinations
                    - header
                    - cookie
                    - consumer
                key:
                  type: string
              required:
                - type
            scheme:
              type: string
              enum:
                - http
                - grpc
            retries:
              type: integer
              minimum: 0
            timeout:
              type: object
              properties:
                connect:
                  type: string
                read:
                  type: string
                send:
                  type: string
            healthCheck:
              type: object
              anyOf:
                - required:
                    - active
                - required:
                    - active
                    - passive
              properties:
                active:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - http
                        - https
                        - tcp
                    timeout:
                      type: number
                      minimum: 0
                    concurrency:
                      type: integer
                      minimum: 1
                    host:
                      type: string
                      pattern: "^\\*?[0-9a-zA-Z-._]+$"
                    port:
                      type: integer
                      minimum: 1
                      maximum: 65535
                    httpPath:
                      type: string
                      minLength: 1
                    strictTLS:
                      type: boolean
                    requestHeaders:
                      type: array
                      minItems: 1
                      items:
                        type: string
                    healthy:
                      type: object
                      properties:
                        interval:
                          type: string
                        httpCodes:
                          type: array
                          minItems: 1
                          items:
                            type: integer
                            minimum: 200
                            maximum: 599
                        successes:
                          type: integer
                          minimum: 1
                          maximum: 254
                    unhealthy:
                      type: object
                      properties:
                        interval:
                          type: string
                        httpCodes:
                          type: array
                          minItems: 1
                          items:
                            type: integer
                            minimum: 200
                            maximum: 599
                        httpFailures:
                          type: integer
                          minimum: 1
                          maximum: 254
                        tcpFailures:
                          type: integer
                          minimum: 1
                          maximum: 254
                        timeout:
                          type: string
                passive:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - http
                        - https
                        - tcp
                    healthy:
                      type: object
                      properties:
                        httpCodes:
                          type: array
                          minItems: 1
                          items:
                            type: integer
                            minimum: 200
                            maximum: 599
                        successes:
                          type: integer
                          minimum: 1
                          maximum: 254
                    unhealthy:
                      type: object
                      properties:
                        httpCodes:
                          type: array
                          minItems: 1
                          items:
                            type: integer
                            minimum: 200
                            maximum: 599
                        httpFailures:
                          type: integer
                          minimum: 1
                          maximum: 254
                        tcpFailures:
                          type: integer
                          minimum: 1
                          maximum: 254
                        timeout:
                          type: string
            portLevelSettings:
              type: array
              items:
                type: object
                properties:
                  port:
                    type: integer
                    minimum: 1
                    maximum: 65535
                  loadbalancer:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - roundrobin
                          - chash
                          - ewma
                          - least_conn
                      hashOn:
                        type: string
                        enum:
                          - vars
                          - vars_combinations
                          - header
                          - cookie
                          - consumer
                      key:
                        type: string
                    required:
                      - type
                  scheme:
                    type: string
                    enum:
                      - http
                      - grpc
                  retries:
                    type: integer
                    minimum: 0
                  timeout:
                    type: object
                    properties:
                      connect:
                        type: string
                      read:
                        type: string
                      send:
                        type: string
                  healthCheck:
                    type: object
                    anyOf:
                      - required:
                          - active
                      - required:
                          - active
                          - passive
                    properties:
                      active:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - http
                              - https
                              - tcp
                          timeout:
                            type: number
                            minimum: 0
                          concurrency:
                            type: integer
                            minimum: 1
                          host:
                            type: string
                            pattern: "^\\*?[0-9a-zA-Z-._]+$"
                          port:
                            type: integer
                            minimum: 1
                            maximum: 65535
                          httpPath:
                            type: string
                            minLength: 1
                          strictTLS:
                            type: boolean
                          requestHeaders:
                            type: array
                            minItems: 1
                            items:
                              type: string
                          healthy:
                            type: object
                            properties:
                              interval:
                                type: string
                              httpCodes:
                                type: array
                                minItems: 1
                                items:
                                  type: integer
                                  minimum: 200
                                  maximum: 599
                              successes:
                                type: integer
                                minimum: 1
                                maximum: 254
                          unhealthy:
                            type: object
                            properties:
                              interval:
                                type: string
                              httpCodes:
                                type: array
                                minItems: 1
                                items:
                                  type: integer
                                  minimum: 200
                                  maximum: 599
                              httpFailures:
                                type: integer
                                minimum: 1
                                maximum: 254
                              tcpFailures:
                                type: integer
                                minimum: 1
                                maximum: 254
                              timeout:
                                type: string
                      passive:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - http
                              - https
                              - tcp
                          healthy:
                            type: object
                            properties:
                              httpCodes:
                                type: array
                                minItems: 1
                                items:
                                  type: integer
                                  minimum: 200
                                  maximum: 599
                              successes:
                                type: integer
                                minimum: 1
                                maximum: 254
                          unhealthy:
                            type: object
                            properties:
                              httpCodes:
                                type: array
                                minItems: 1
                                items:
                                  type: integer
                                  minimum: 200
                                  maximum: 599
                              httpFailures:
                                type: integer
                                minimum: 1
                                maximum: 254
                              tcpFailures:
                                type: integer
                                minimum: 1
                                maximum: 254
                              timeout:
                                type: string
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: apisixconsumers.apisix.apache.org
spec:
  group: apisix.apache.org
  versions:
    - name: v2alpha1
      served: true
      storage: true
  scope: Namespaced
  names:
    plural: apisixconsumers
    singular: apisixconsumer
    kind: ApisixConsumer
    shortNames:
      - ac
  preserveUnknownFields: false
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      properties:
        spec:
          type: object
          required:
            - authParameter
          properties:
            authParameter:
              type: object
              oneOf:
                - required: ["basicAuth"]
                - required: ["keyAuth"]
              properties:
                basicAuth:
                  type: object
                  oneOf:
                    - required: ["value"]
                    - required: ["secretRef"]
                  properties:
                    value:
                      type: object
                      properties:
                        username:
                          type: string
                          minLength: 1
                        password:
                          type: string
                          minLength: 1
                      required:
                        - username
                        - password
                    secretRef:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                      required:
                        - name
                keyAuth:
                  type: object
                  oneOf:
                    - required: ["value"]
                    - required: ["secretRef"]
                  properties:
                    value:
                      type: object
                      properties:
                        key:
                          type: string
                          minLength: 1
                      required:
                        - key
                    secretRef:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                      required:
                        - name
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: apisixclusterconfigs.apisix.apache.org
spec:
  group: apisix.apache.org
  versions:
    - name: v2alpha1
      served: true
      storage: true
  scope: Cluster
  names:
    plural: apisixclusterconfigs
    singular: apisixclusterconfig
    kind: ApisixClusterConfig
    shortNames:
      - acc
  preserveUnknownFields: false
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      properties:
        spec:
          type: object
          properties:
            admin:
              type: object
              required:
                - baseURL
              properties:
                baseURL:
                  type: string
                  pattern: "https?://[^:]+:(\\d+)"
                adminKey:
                  type: string
            monitoring:
              type: object
              properties:
                prometheus:
                  type: object
                  properties:
                    enable:
                      type: boolean
                skywalking:
                  type: object
                  properties:
                    enable:
                      type: boolean
                    sampleRatio:
                      type: number
                      minimum: 0.00001
                      maximum: 1
